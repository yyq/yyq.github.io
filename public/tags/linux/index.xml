<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Young Story</title><link>https://yyq.github.io/tags/linux/</link><description>Recent content in linux on Young Story</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Mar 2013 22:52:01 +0000</lastBuildDate><atom:link href="https://yyq.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>eclispe+qemu+gdb调试linux kernel全过程</title><link>https://yyq.github.io/posts/2013/2013-03-06-eclisep-plus-qemu-plus-gdbdiao-shi-linux-kernelquan-guo-cheng/</link><pubDate>Wed, 06 Mar 2013 22:52:01 +0000</pubDate><guid>https://yyq.github.io/posts/2013/2013-03-06-eclisep-plus-qemu-plus-gdbdiao-shi-linux-kernelquan-guo-cheng/</guid><description>&lt;h1 id="单步调试kernel说明">单步调试kernel说明&lt;/h1>
&lt;p>恩，这个文档的目标是单步调试内核，从每一个工具软件的版本号到每一个命令，都有一个说明&lt;/p></description></item><item><title>学习linux启动过程</title><link>https://yyq.github.io/posts/2013/2013-01-15-xue-xi-linuxqi-dong-guo-cheng/</link><pubDate>Tue, 15 Jan 2013 09:50:01 +0000</pubDate><guid>https://yyq.github.io/posts/2013/2013-01-15-xue-xi-linuxqi-dong-guo-cheng/</guid><description>&lt;p>下一步需要学习动态的linux函数调用关系，所以得先从启动过程开始了解。从一本书&lt;strong>linux内核设计的艺术&lt;/strong>中了解到的资料，以下内容如果不做特别注释的话，均为Linux0.11中的方式，可能新版本的kernel的函数名和这个会不一样，但是处理流程，我想应该每个操作系统都是一样的吧。&lt;/p></description></item><item><title>Doxygen使用说明（个人总结）</title><link>https://yyq.github.io/posts/2012/2012-12-26-doxygenshi-yong-shuo-ming-ge-ren-zong-jie-/</link><pubDate>Wed, 26 Dec 2012 13:10:01 +0000</pubDate><guid>https://yyq.github.io/posts/2012/2012-12-26-doxygenshi-yong-shuo-ming-ge-ren-zong-jie-/</guid><description>&lt;h2 id="doxygen是什么">Doxygen是什么&lt;/h2>
&lt;p>简单的说，在我看来，这就是一个生成注释的工具，跨平台，很好用。输入一个工程的源代码，它可以很好的把所有文档里的注释等信息挑出来。然后结合工程组织成html或者tex等。方便对我们对工程的了解。
可以参考&lt;a href="http://zh.wikipedia.org/wiki/Doxygen">wikipedia&lt;/a>&lt;/p>
&lt;p>正好项目里有这样的需求，我就做个这么一个使用记录吧。&lt;/p></description></item></channel></rss>