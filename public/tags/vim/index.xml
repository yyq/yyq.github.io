<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vim on Young Story</title><link>https://yyq.github.io/tags/vim/</link><description>Recent content in vim on Young Story</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://yyq.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>继续更新自己的vimrc配置</title><link>https://yyq.github.io/posts/2017/2017-03-24-my-vimrc-config-details/</link><pubDate>Sat, 25 Mar 2017 00:00:00 +0000</pubDate><guid>https://yyq.github.io/posts/2017/2017-03-24-my-vimrc-config-details/</guid><description>感觉拷贝来一些插件什么的，有的设置和快捷键，自己看的时候知道，但是不常用的话，过些天再一看手生了，也就忘记了。
有一些很有用的技巧，得写下来，放着，以备自己忘记了，再来查看。
高亮当前光标的位置，横着的一条，竖着的一条，省的自己满屏幕找光标在哪 mapleader设置为空格，有效利用上大拇指和空格键了，各种快捷键更加飞起 语法高亮得开着 文件夹目录结构插件nerdtree的快捷键ctrl+n,从此不用离开vim即可浏览各级目录 编辑时，tab自动转成两个空格，上大学的时候流行默认四个空格，据说最近湾区都流行两个空格 高亮第80个字符的位置，为啥建议每一行不超过80个字符呢，多年前的IBM punch card宽度就是80，现在呢，大家显示器一行可以显示很多很多字符了，但是仍然建议80字符，因为这样的代码更紧凑，可读性更高。在各个IDE或者编辑器的默认设置里都不用自动折叠代码，就能直接看完一行字 显示行号 连续两个空格，用来执行ctrl+^,可以迅速的在最近使用的两个文件之间来回切换 在多个窗口之间移动，vim默认是ctrl+w，然后在hjkl,此处我直接修改成ctrl+hjkl 在多个tab之间切换，vim默认是gT左标签gt右标签，我直接改成大写字母的H和L tagbar快捷键，空格+tb，tagbar是一个文件内的书签列表，可用于快速导航，切换到某函数啊，类啊，变量啊什么的 我的 :w回车，修改成w，就是空格+w了，再加上空格+q，无比方便的保存当前文件，关闭当前窗口 buffer切换，用[b代替了 :bprevious,用]b代替了:bnext Next：更多学习ctrlp的快捷键，利用好空格即是我的mapleader
更新：
参考了YouCompleteMe作者的vimrc(github link)，我自己又重新审视了一下自己的vimrc，做出如下修改：我使用rspec的机会较少，注释掉相关快捷键；窗口切换我之前用的是ctrl加上ghjk，现在改成空格加上ghjk. 搜索字符串的几个命令，都修改成默认的加上zz，这样搜索文字就能每次都居中屏幕显示了，这个确实很有用。 CtrlP不用了暂时，用Command+T来在工程里搜索文件 最后看一眼现在我的vim的样子吧</description></item><item><title>我的vim配置说明</title><link>https://yyq.github.io/posts/2017/2017-03-01-my-vimrc-config/</link><pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate><guid>https://yyq.github.io/posts/2017/2017-03-01-my-vimrc-config/</guid><description>参考了不少书籍和网站，最终形成一个自己觉得顺手的vim配置文件，存在github的gist了，有兴趣的朋友可以看看，交流交流。 .vimrc .vimrc.bundles
要相关插件都正常工作的话，需要手动执行的一些操作如下：
mkdir ~/.vim touch .vimrc touch .vimrc.bundles fill the file content(vimrc, vimrc.bundles) Download Vundle for VIM git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim open vim, and run :BundleInstall The command to install ctags on my mac: brew install ctags
The command to install YouCompleteMe
cd ~/.vim/bundle/YouCompleteMe ./install.py --clang-completer 有的插件对VIM有版本要求，版本号不能太低了。我是用的macOS，安装了最近的8.0版本，绝大部分插件都能正常工作
关于各个插件的详细使用说明和配置说明的话，可以参考vimrc.bundles里面的各个github链接，看他们的readme，或者直接看他们源代码，代码都存在~/.vim/bundle里面了
我把我的这两个配置文件也贴在这里好了</description></item><item><title>vim中文手册 vimtutor中文版</title><link>https://yyq.github.io/posts/2017/2017-02-22-vimtutor-chinese-summary/</link><pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate><guid>https://yyq.github.io/posts/2017/2017-02-22-vimtutor-chinese-summary/</guid><description>最近在学习VIM的使用，在命令行里输入vimtutor可以打开基本教程，然后跟着练习一个一个做下来，也算是入门了。不过因为没有时刻都在用，所有有时候有的命令就忘记了。于是把教程中的每一课的summary都翻译成中文，保存下来，供以后查阅。
第一课 摘要 1. 光标移动使用箭头或者hjkl四个字母 h (左) j (下) k (上) l (右) 2. 从shell开始启动vim的命令是：vim 文件名 &amp;lt;ENTER&amp;gt; 3. 退出VIM: 放弃所有更改退出： &amp;lt;ESC&amp;gt; :q! &amp;lt;ENTER&amp;gt; . 保存更改退出： &amp;lt;ESC&amp;gt; :wq &amp;lt;ENTER&amp;gt; . 4. 删除光标处的字符: x 5. 插入字符： 在光标之前插入字符： i 在行尾添加字符： A 注意：按&amp;lt;ESC&amp;gt;键可以让你回到正常模式或者取消你未完成的命令 第二课 摘要 1. 删除字符，从光标开始直到遇到下一个单词 dw 2. 删除字符，从光标开始直到当前行的末尾 d$ 3. 删除一整行 dd 4. 重复一个动作，可以在动作之前加一个数字： 2w 5. 一些操作的格式是： 操作符 [数字] 移动 操作符：要做什么，例如字母d是用于删除 数字： 你要重复的次数 移动： 你的操作要作用在多少文本内容上，例如w就是一个单词，$是到行尾 6. 把光标移动到行首： 0 7. 撤销之前的动作： u (小写u) 撤销这一行的所有改动： U （大写U） 撤销刚才的”撤销“： CTRL-R 第三课 摘要 1.</description></item></channel></rss>