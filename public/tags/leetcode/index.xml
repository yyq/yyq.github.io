<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leetcode on Young Story</title><link>https://yyq.github.io/tags/leetcode/</link><description>Recent content in leetcode on Young Story</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Mar 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://yyq.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>我要用python把leetcodeOJ算法题刷一遍。</title><link>https://yyq.github.io/posts/2015/2015-03-30-python-through-leetcodeoj/</link><pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate><guid>https://yyq.github.io/posts/2015/2015-03-30-python-through-leetcodeoj/</guid><description>给自己挖下一个坑，看看多久能摆平，平常吧，对算法有些兴趣，却总是没有持续的投入时间去学习。这次为了考验自己，看看到底有多强的执行力。leetcodeOJ难度对我来说刚刚好，不会难到我根本搞不定，也不会容易到每道题都能一次切过。在github上建立一个工程，https://github.com/yyq/LeetCodeOJ-python，看看多少时间能完成。完成顺序，就按照人家网站上的题号从小到大来吧。
这里写下这篇文章，也顺便记录一下，在切题过程中遇到的坑，以及学习心得，感想。
第四题。两个有序数组找中位数问题，时间复杂度log(n), 注意考虑奇偶性的情况，因为这个重复提交了好几遍才AC.
第五题：找回文字符串，思路好说，边界问题坑了我两三把。
第八题：字符串转数字的方法，各种特殊情况都需要考虑周全。</description></item></channel></rss>